Description: A CloudFormation template for deploying Raster Vision Batch jobs to AWS.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Project Metadata
        Parameters:
          - Prefix
      -
        Label:
          default: Required Parameters
        Parameters:
          - VPC
          - SubnetIds
          - KeyName
          - GpuAMI
          - CpuAMI
      -
        Label:
          default: Instance Types (Advanced)
        Parameters:
          - GpuInstanceTypes
          - CpuInstanceTypes
      -
        Label:
          default: Batch Compute Parameters (Advanced)
        Parameters:
          - MinimumVCPUs
          - DesiredVCPUs
          - MaximumVCPUs
          - CidrRange
          - SpotFleetBidPercentage
          - GpuLaunchTemplate
          - GpuLaunchTemplateVersion
          - CpuLaunchTemplate
          - CpuLaunchTemplateVersion
      -
        Label:
          default: Container Image Parameters (Advanced)
        Parameters:
          - GpuRepositoryName
          - CpuRepositoryName
          - ImageTag
          - GPUInstanceVCPUs
          - GPUInstanceMemory
          - CPUInstanceVCPUs
          - CPUInstanceMemory
    ParameterLabels:
      Prefix:
        default: Prefix
      GpuAMI:
        default: AMI (GPU)
      CpuAMI:
        default: AMI (CPU)
      KeyName:
        default: SSH Key Name
      SpotFleetBidPercentage:
        default: Spot Fleet Bid Percentage
      MinimumVCPUs:
        default: Minimum vCPU Count
      DesiredVCPUs:
        default: Desired vCPU Count
      MaximumVCPUs:
        default: Maximum vCPU Count
      CidrRange:
        default: CIDR Range
      GpuInstanceTypes:
        default: Instance Types (GPU)
      CpuInstanceTypes:
        default: Instance Types (CPU)
      GPUInstanceVCPUs:
        default: GPU vCPU Limit
      GPUInstanceMemory:
        default: GPU Memory Limit
      CPUInstanceVCPUs:
        default: CPU vCPU Limit
      CPUInstanceMemory:
        default: CPU Memory Limit
      CpuRepositoryName:
        default: Repository Name (CPU)
      GpuRepositoryName:
        default: Repository Name (GPU)
      ImageTag:
        default: Image Tag
      VPC:
        default: VPC
      SubnetIds:
        default: Subnets
      GpuLaunchTemplate:
        default: Launch Template (GPU)
      GpuLaunchTemplateVersion:
        default: Launch Template Version (GPU)
      CpuLaunchTemplate:
        default: Launch Template (CPU)
      CpuLaunchTemplateVersion:
        default: Launch Template Version (CPU)

Parameters:
  Prefix:
    Type: String
    Default: ""
    Description: >
      Optional lowercase identifier to use for namespacing your resources (e.g.
      RasterVisionIamRole becomes yournameRasterVisionIamRole). You need to do this if you
      are setting up multiple RV stacks within one account.
    MaxLength: 12
    AllowedPattern: ^[a-z0-9]*$
    ConstraintDescription: must only contain lowercase letters and numbers

  GpuAMI:
    Type: AWS::EC2::Image::Id
    Description: Amazon Machine Image to use for the GPU-enabled compute environment

  CpuAMI:
    Type: AWS::EC2::Image::Id
    Description: Amazon Machine Image to use for the CPU-enabled compute environment

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: An Amazon EC2 key pair name to use for SSH access to the cluster

  SpotFleetBidPercentage:
    Type: Number
    Default: 60
    Description: >
      Minimum percentage that a Spot Instance price must be when compared with
      the On-Demand price for that instance type before instances are launched

  MinimumVCPUs:
    Type: Number
    Default: 0
    Description: The minimum number of EC2 vCPUs that an environment should maintain

  DesiredVCPUs:
    Type: Number
    Default: 2
    Description: The desired number of EC2 vCPUS in the compute environment

  MaximumVCPUs:
    Type: Number
    Default: 80
    Description: The maximum number of EC2 vCPUs that an environment can reach

  CidrRange:
    Type: String
    Default: 0.0.0.0/0
    Description: >
      Restrict inbound traffic to your EC2 instance to requests coming from
      a specific CIDR range
    # Pattern taken from: https://www.regexpal.com/94836
    AllowedPattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: must be a valid IPv4 address or CIDR range

  GpuInstanceTypes:
    Type: List<String>
    Default: p2.xlarge
    Description: >
      A comma-separated list of instance types that may be launched with the
      GPU-enabled AMI

  CpuInstanceTypes:
    Type: List<String>
    Default: c4.xlarge
    Description: >
      A comma-separated list of instance types that may be launched with the
      CPU-enabled AMI

  GPUInstanceVCPUs:
    Type: Number
    Default: 4
    Description: Number of vCPUs reserved for the container by the task definition for GPU instances (8 should be used for P3 instances)

  GPUInstanceMemory:
    Type: Number
    Default: 40000
    Description: The hard limit (in MB) of memory to present to the container for GPU instances (55000 should be used for P3 instances)

  CPUInstanceVCPUs:
    Type: Number
    Default: 1
    Description: Number of vCPUs reserved for the container by the task definition for CPU instances

  CPUInstanceMemory:
    Type: Number
    Default: 1250
    Description: The hard limit (in MB) of memory to present to the container for CPU instances

  GpuRepositoryName:
    Type: String
    Default: ""
    Description: >
      (Optional) Specifies the name of an ECR repository to create for use in
      pushing and pulling container images -- if empty, pulls the latest
      GPU-based Raster Vision container image from Quay.io instead

  CpuRepositoryName:
    Type: String
    Default: ""
    Description: >
      (Optional) Specifies the name of an ECR repository to create for use in
      pushing and pulling CPU-enabled images -- if empty, pulls the latest
      CPU-based Raster Vision container image from Quay.io instead

  ImageTag:
    Type: String
    Default: ""
    Description: >
      (Optional) Tag of the CPU and GPU container image to retrieve from ECR -- required
      if CpuRepositoryName or GpuRepositoryName is not empty

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Virtual Private Cloud in which to launch Batch instances

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: >
      A list of IDs of subnets in which to launch Batch instances (all subnets
      must exist in the VPC you selected)

  GpuLaunchTemplate:
    Type: String
    Default: ""
    Description:
      (Optional) The ID of an EC2 Launch Template to associate with the GPU-based
      Batch Compute Environment.

  GpuLaunchTemplateVersion:
    Type: Number 
    Default: 1
    Description:
      (Optional) The version of the EC2 Launch Template to associate with the GPU-based
      Batch Compute Environment. 

  CpuLaunchTemplate:
    Type: String
    Default: ""
    Description:
      (Optional) The ID of an EC2 Launch Template to associate with the CPU-based
      Batch Compute Environment.

  CpuLaunchTemplateVersion:
    Type: Number 
    Default: 1
    Description:
      (Optional) The version of the EC2 Launch Template to associate with the CPU-based
      Batch Compute Environment. 

Conditions:
  UseHostedGpuImage: !Equals [!Ref GpuRepositoryName, ""]
  UseCustomGpuImage: !Not [!Equals [!Ref GpuRepositoryName, ""]]
  UseHostedCpuImage: !Equals [!Ref CpuRepositoryName, ""]
  UseCustomCpuImage: !Not [!Equals [!Ref CpuRepositoryName, ""]]
  UseGpuLaunchTemplate: !Not [!Equals [!Ref GpuLaunchTemplate, ""]]
  UseCpuLaunchTemplate: !Not [!Equals [!Ref CpuLaunchTemplate, ""]]

Resources:
  BatchServiceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref Prefix, 'RasterVisionBatchRole']]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - batch.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  SpotFleetIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref Prefix, 'RasterVisionSpotFleetRole']]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - spotfleet.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole

  BatchInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref Prefix, 'RasterVisionInstanceRole']]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  BatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref BatchInstanceIAMRole
      InstanceProfileName: !Join ['', [!Ref Prefix, 'RasterVisionInstanceProfile']]

  ContainerInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupName: !Join ['', [!Ref Prefix, 'RasterVisionSecurityGroup']]
      GroupDescription: !Join ['', ['Security group for ', !Ref Prefix, ' (Raster Vision)']]
      SecurityGroupIngress:
        -
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
          CidrIp: !Ref CidrRange
        -
          FromPort: 6006
          ToPort: 6006
          IpProtocol: tcp
          CidrIp: !Ref CidrRange
      SecurityGroupEgress:
        -
          FromPort: 0
          ToPort: 65535
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      Tags:
        -
          Key: Name
          Value: !Join ['', [!Ref Prefix, 'RasterVisionSecurityGroup']]

  GpuRepository:
    Type: AWS::ECR::Repository
    Condition: UseCustomGpuImage
    Properties:
      RepositoryName: !Ref GpuRepositoryName

  CpuRepository:
    Type: AWS::ECR::Repository
    Condition: UseCustomCpuImage
    Properties:
      RepositoryName: !Ref CpuRepositoryName

  GpuComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Join ['', [!Ref Prefix, 'RasterVisionGpuComputeEnvironment']]
      Type: Managed
      State: ENABLED
      ServiceRole: !Ref BatchServiceIAMRole
      ComputeResources:
        Type: SPOT
        BidPercentage: !Ref SpotFleetBidPercentage
        Ec2KeyPair: !Ref KeyName
        ImageId: !Ref GpuAMI
        MinvCpus: !Ref MinimumVCPUs
        DesiredvCpus: !Ref DesiredVCPUs
        MaxvCpus: !Ref MaximumVCPUs
        SpotIamFleetRole: !Ref SpotFleetIAMRole
        InstanceRole: !Ref BatchInstanceProfile
        InstanceTypes: !Ref GpuInstanceTypes
        SecurityGroupIds:
          - !Ref ContainerInstanceSecurityGroup
        Subnets: !Ref SubnetIds
        LaunchTemplate:
          !If
            - UseGpuLaunchTemplate
            -
              LaunchTemplateId: !Ref GpuLaunchTemplate
              Version: !Ref GpuLaunchTemplateVersion
            - !Ref "AWS::NoValue"
        Tags:
          Name: !Join ['', [!Ref Prefix, 'RasterVisionGpuComputeEnvironment']]
          ComputeEnvironment: Raster Vision

  CpuComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Join ['', [!Ref Prefix, 'RasterVisionCpuComputeEnvironment']]
      Type: Managed
      State: ENABLED
      ServiceRole: !Ref BatchServiceIAMRole
      ComputeResources:
        Type: SPOT
        BidPercentage: !Ref SpotFleetBidPercentage
        Ec2KeyPair: !Ref KeyName
        ImageId: !Ref CpuAMI
        MinvCpus: !Ref MinimumVCPUs
        DesiredvCpus: !Ref DesiredVCPUs
        MaxvCpus: !Ref MaximumVCPUs
        SpotIamFleetRole: !Ref SpotFleetIAMRole
        InstanceRole: !Ref BatchInstanceProfile
        InstanceTypes: !Ref CpuInstanceTypes
        SecurityGroupIds:
          - !Ref ContainerInstanceSecurityGroup
        Subnets: !Ref SubnetIds
        LaunchTemplate:
          !If
            - UseCpuLaunchTemplate
            -
              LaunchTemplateId: !Ref GpuLaunchTemplate
              Version: !Ref GpuLaunchTemplateVersion
            - !Ref "AWS::NoValue"
        Tags:
          Name: !Join ['', [!Ref Prefix, 'RasterVisionCpuComputeEnvironment']]
          ComputeEnvironment: Raster Vision

  GpuJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Join ['', [!Ref Prefix, 'RasterVisionGpuJobQueue']]
      Priority: 1
      State: ENABLED
      ComputeEnvironmentOrder:
        -
          ComputeEnvironment: !Ref GpuComputeEnvironment
          Order: 1

  CpuJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Join ['', [!Ref Prefix, 'RasterVisionCpuJobQueue']]
      Priority: 1
      State: ENABLED
      ComputeEnvironmentOrder:
        -
          ComputeEnvironment: !Ref CpuComputeEnvironment
          Order: 1

  CustomGpuJobDefinition:
    Type: AWS::Batch::JobDefinition
    Condition: UseCustomGpuImage
    Properties:
      Type: Container
      JobDefinitionName: !Join ['', [!Ref Prefix, 'RasterVisionCustomGpuJobDefinition']]
      ContainerProperties:
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${GpuRepositoryName}:${ImageTag}"
        Vcpus: !Ref GPUInstanceVCPUs
        Memory: !Ref GPUInstanceMemory
        Volumes:
          -
            Host:
              SourcePath: /home/ec2-user
            Name: home
        MountPoints:
          -
            ContainerPath: /opt/data
            ReadOnly: false
            SourceVolume: home
        ReadonlyRootFilesystem: false
        Privileged: true

  HostedGpuJobDefinition:
    Type: AWS::Batch::JobDefinition
    Condition: UseHostedGpuImage
    Properties:
      Type: Container
      JobDefinitionName: !Join ['', [!Ref Prefix, 'RasterVisionHostedGpuJobDefinition']]
      ContainerProperties:
        Image: quay.io/azavea/raster-vision:gpu-latest
        Vcpus: !Ref GPUInstanceVCPUs
        Memory: !Ref GPUInstanceMemory
        Volumes:
          -
            Host:
              SourcePath: /home/ec2-user
            Name: home
        MountPoints:
          -
            ContainerPath: /opt/data
            ReadOnly: false
            SourceVolume: home
        ReadonlyRootFilesystem: false
        Privileged: true

  CustomCpuJobDefinition:
    Type: AWS::Batch::JobDefinition
    Condition: UseCustomCpuImage
    Properties:
      Type: Container
      JobDefinitionName: !Join ['', [!Ref Prefix, 'RasterVisionCustomCpuJobDefinition']]
      ContainerProperties:
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${CpuRepositoryName}:${ImageTag}"
        Vcpus: !Ref CPUInstanceVCPUs
        Memory: !Ref CPUInstanceMemory
        Volumes:
          -
            Host:
              SourcePath: /home/ec2-user
            Name: home
        MountPoints:
          -
            ContainerPath: /opt/data
            ReadOnly: false
            SourceVolume: home
        ReadonlyRootFilesystem: false
        Privileged: true

  HostedCpuJobDefinition:
    Type: AWS::Batch::JobDefinition
    Condition: UseHostedCpuImage
    Properties:
      Type: Container
      JobDefinitionName: !Join ['', [!Ref Prefix, 'RasterVisionHostedCpuJobDefinition']]
      ContainerProperties:
        Image: quay.io/azavea/raster-vision:cpu-latest
        Vcpus: !Ref CPUInstanceVCPUs
        Memory: !Ref CPUInstanceMemory
        Volumes:
          -
            Host:
              SourcePath: /home/ec2-user
            Name: home
        MountPoints:
          -
            ContainerPath: /opt/data
            ReadOnly: false
            SourceVolume: home
        ReadonlyRootFilesystem: false
        Privileged: true
